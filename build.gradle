buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.0'
    }
}

plugins {
    id 'com.github.dcendents.android-maven' version '1.5'
    id 'com.jfrog.bintray' version '1.7'
}

def app_version = '0.13.0'

apply plugin: 'com.android.library'
apply plugin: 'maven'
group = 'org.saltyrtc.tasks.webrtc'
version = app_version

// Android configuration
android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    maven { url "http://dl.bintray.com/saltyrtc/maven" }
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // SaltyRTC
    implementation('org.saltyrtc.client:saltyrtc-client:0.10.+') {
        exclude group: 'org.json'
        exclude module: 'msgpack-core'
        exclude module: 'jackson-dataformat-msgpack'
    }
    // The production code uses the SLF4J logging API at compile time
    implementation 'org.slf4j:slf4j-api:1.7.24'
    // WebRTC RTCPeerConnection
    implementation files('libs/base_java.jar')
    implementation files('libs/audio_device_java.jar')
    implementation files('libs/libjingle_peerconnection_java.jar')
    // Dependency: Msgpack serialization
    implementation 'org.msgpack:msgpack-core:0.8.12'
    implementation 'org.msgpack:jackson-dataformat-msgpack:0.8.12'
    // Dependency: Binary chunking
    implementation 'org.saltyrtc.chunked-dc:chunked-dc:1.0.+'
    // Test dependencies
    testImplementation 'org.slf4j:slf4j-simple:1.7.21'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support:support-annotations:27.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'com.noveogroup.android:android-logger:1.3.1'
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

// Upload to Bintray
bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'saltyrtc-task-webrtc'
        userOrg = 'saltyrtc'
        desc = 'WebRTC Task for SaltyRTC.'
        websiteUrl = 'http://saltyrtc.org/'
        issueTrackerUrl = 'https://github.com/saltyrtc/saltyrtc-task-webrtc-java/issues'
        vcsUrl = 'https://github.com/saltyrtc/saltyrtc-task-webrtc-java.git'
        githubRepo = 'saltyrtc/saltyrtc-task-webrtc-java'
        publicDownloadNumbers = true
        licenses = ['MIT', 'Apache-2.0']
        labels = ['saltyrtc', 'webrtc', 'data channels', 'signaling', 'secure']
        version {
            name = app_version
            desc = 'SaltyRTC WebRTC Task v${app_version}'
            released = new Date()
            vcsTag = 'v${app_version}'
        }
    }
}

// Upload to local Maven repo for testing
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('/tmp/maven/'))
            pom.version = app_version
            pom.artifactId = 'saltyrtc-task-webrtc'
            pom.packaging = 'aar'
        }
    }
}
